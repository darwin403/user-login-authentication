{"version":3,"sources":["user/login.js","user/register.js","home/index.js","serviceWorker.js","index.js"],"names":["Login","props","useState","email","setEmail","password","setPassword","error","setError","class","to","className","type","placeholder","value","onChange","e","target","onClick","axios","post","then","response","toast","onSuccess","data","message","aria-label","Register","name","setName","put","ProtectedItem","isAuthenticated","children","ProtectedRoute","path","defaultProps","i","Index","user","setUser","token","allPosts","setAllPosts","userPosts","setUserPosts","postTitle","setPostTitle","postContent","setPostContent","useEffect","Cookies","set","domain","get","posts","console","log","history","useHistory","handleUser","push","style","paddingBottom","marginTop","aria-hidden","remove","disabled","title","content","setTimeout","window","location","href","map","index","margin","belong_to","dangerouslySetInnerHTML","__html","Boolean","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.766484de.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function Login(props) {\n  const [email, setEmail] = useState(\"john@example.com\");\n  const [password, setPassword] = useState(\"mypass\");\n  const [error, setError] = useState(null);\n\n  const loginUser = () => {\n    axios\n      .post(\"/users\", {\n        email,\n        password,\n      })\n      .then(\n        response => {\n          toast(\"Logged in successfully!\");\n          props.onSuccess(response.data);\n        },\n        error => setError(error.response.data.message || error.message)\n      );\n  };\n\n  return (\n    <div class=\"modal is-active\">\n      <div class=\"modal-background\"></div>\n      <div class=\"modal-content\">\n        <div class=\"box\">\n          <h1 class=\"title\">Sign In</h1>\n          <h2 class=\"subtitle\">\n            Don't have an account? <Link to=\"/register\">Register</Link> for\n            free!\n          </h2>\n          {error && (\n            <article class=\"message is-danger\">\n              <div class=\"message-body\">{error}</div>\n            </article>\n          )}\n          <div className=\"field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"email\"\n                placeholder=\"john@doe.com\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\" />\n              </span>\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i class=\"fas fa-key\"></i>\n              </span>\n            </p>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <button\n                className=\"button is-link\"\n                type=\"submit\"\n                onClick={loginUser}>\n                Login\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Link class=\"modal-close is-large\" aria-label=\"close\" to=\"/\"></Link>\n    </div>\n  );\n}\n\nLogin.defaultProps = {\n  onSuccess: i => i,\n};\n","import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { Link } from \"react-router-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nexport default function Register(props) {\n  const [name, setName] = useState(\"John Doe\");\n  const [email, setEmail] = useState(\"john@example.com\");\n  const [password, setPassword] = useState(\"mypass\");\n  const [error, setError] = useState(null);\n\n  const registerUser = () => {\n    axios\n      .put(\"/users\", {\n        name,\n        email,\n        password,\n      })\n      .then(\n        response => {\n          toast(\"Account created!\");\n          props.onSuccess(response.data);\n        },\n        error => setError(error.response.data.message || error.message)\n      );\n  };\n\n  return (\n    <div class=\"modal is-active\">\n      <div class=\"modal-background\"></div>\n      <div class=\"modal-content\">\n        <div class=\"box\">\n          <h1 class=\"title\">Register</h1>\n          <h2 class=\"subtitle\">\n            Already have an account? <Link to=\"/login\">Login</Link> for all\n            benefits!\n          </h2>\n          {error && (\n            <article class=\"message is-danger\">\n              <div class=\"message-body\">{error}</div>\n            </article>\n          )}\n          <div className=\"field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"text\"\n                placeholder=\"John Doe\"\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-user\" />\n              </span>\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"email\"\n                placeholder=\"john@doe.com\"\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-envelope\" />\n              </span>\n            </p>\n          </div>\n          <div className=\"field\">\n            <p className=\"control has-icons-left has-icons-right\">\n              <input\n                className=\"input\"\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n              <span className=\"icon is-small is-left\">\n                <i class=\"fas fa-key\"></i>\n              </span>\n            </p>\n          </div>\n          <div className=\"field\">\n            <div className=\"control\">\n              <button\n                className=\"button is-link\"\n                type=\"submit\"\n                onClick={registerUser}>\n                Sign up!\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <Link class=\"modal-close is-large\" aria-label=\"close\" to=\"/\"></Link>\n    </div>\n  );\n}\n\nRegister.defaultProps = {\n  onSuccess: i => i,\n};\n","import React, { useState, userEffect, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport Cookies from \"js-cookie\";\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n  Redirect,\n} from \"react-router-dom\";\n\nimport \"./index.scss\";\n\nimport Login from \"../user/login\";\nimport Register from \"../user/register\";\n\nfunction Index() {\n  const [user, setUser] = useState(null);\n  const isAuthenticated = user && user.token;\n  const [allPosts, setAllPosts] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n\n  const [postTitle, setPostTitle] = useState(\"\");\n  const [postContent, setPostContent] = useState(\"\");\n\n  useEffect(() => {\n    if (user && user.token) {\n      Cookies.set(\"token\", user.token, { domain: \"localhost\" });\n    }\n  }, [user]);\n\n  useEffect(() => {\n    // load all posts on mount\n    axios.get(\"/posts\").then(\n      posts => {\n        setAllPosts(posts.data);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n\n    // load previous user session\n    const token = Cookies.get(\"token\");\n    if (!token) return;\n    axios.get(`/users/${token}`).then(\n      user => {\n        setUser(user.data);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }, []);\n\n  let history = useHistory();\n\n  // handle user\n  const handleUser = user => {\n    setUser(user);\n    history.push(\"/\");\n  };\n\n  // load user post\n  const fetchUserPosts = () => {\n    axios\n      .post(\"/posts\", {\n        token: user && user.token,\n      })\n      .then(\n        posts => {\n          setUserPosts(posts.data);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  };\n\n  // create post\n  const createPost = () => {\n    axios\n      .put(\"/posts\", {\n        title: postTitle,\n        content: postContent,\n        token: user && user.token,\n      })\n      .then(\n        () => {\n          toast(\"Post created! Redirecting ...\");\n          setTimeout(function () {\n            window.location.href = \"/\";\n          }, 1000);\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  };\n\n  return (\n    <div class=\"page-home\">\n      <section class=\"hero is-primary is-bold\">\n        <div class=\"hero-body\" style={{ paddingBottom: 0 }}>\n          <div class=\"container\">\n            <h1 class=\"title\">Brand.</h1>\n            <h2 class=\"subtitle\">My awesome store</h2>\n            <div class=\"columns\" style={{ marginTop: \"4em\" }}>\n              <div class=\"column\">\n                <div class=\"tabs is-boxed is-left\">\n                  <ul>\n                    <li class=\"is-active\">\n                      <Link to=\"/\">\n                        <span class=\"icon is-small\">\n                          <i class=\"fas fa-image\" aria-hidden=\"true\"></i>\n                        </span>\n                        <span>Posts</span>\n                      </Link>\n                    </li>\n                    <li>\n                      <Link to=\"/music\">\n                        <span class=\"icon is-small\">\n                          <i class=\"fas fa-music\" aria-hidden=\"true\"></i>\n                        </span>\n                        <span>Music</span>\n                      </Link>\n                    </li>\n                  </ul>\n                </div>\n              </div>\n              <div class=\"column\">\n                <div class=\"tabs is-right\">\n                  <ul>\n                    <li class=\"is-active\">\n                      <Link to=\"/create\">\n                        <span class=\"icon is-small\">\n                          <i class=\"fas fa-pencil-alt\"></i>\n                        </span>\n                        <span>Create Post</span>\n                      </Link>\n                    </li>\n                    <ProtectedItem isAuthenticated={!isAuthenticated}>\n                      <li>\n                        <Link to=\"/login\">\n                          <span class=\"icon is-small\">\n                            <i class=\"fas fa-sign-in-alt\"></i>\n                          </span>\n                          <span>Login</span>\n                        </Link>\n                      </li>\n                    </ProtectedItem>\n                    <ProtectedItem isAuthenticated={isAuthenticated}>\n                      <li>\n                        <Link to=\"/dashboard\" onClick={fetchUserPosts}>\n                          <span class=\"icon is-small\">\n                            <i class=\"fas fa-tachometer-alt\"></i>\n                          </span>\n                          <span>Dashboard</span>\n                        </Link>\n                      </li>\n                    </ProtectedItem>\n                    <ProtectedItem isAuthenticated={isAuthenticated}>\n                      <li>\n                        <Link\n                          to=\"/\"\n                          onClick={e => {\n                            setUser(null);\n                            Cookies.remove(\"token\", user.token, {\n                              domain: \"localhost\",\n                            });\n                            toast(\"User logged out!\");\n                          }}>\n                          <span class=\"icon is-small\">\n                            <i class=\"fas fa-sign-in-alt\"></i>\n                          </span>\n                          <span>Logout</span>\n                        </Link>\n                      </li>\n                    </ProtectedItem>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <Switch>\n        <Route path=\"/music\">\n          <section className=\"section\">\n            <div class=\"container\">This is dummy category.</div>\n          </section>\n        </Route>\n        <ProtectedRoute path=\"/create\" isAuthenticated={isAuthenticated}>\n          <section className=\"section\">\n            <div class=\"container\">\n              <div class=\"row\">\n                <div class=\"columns\">\n                  <div class=\"column\">\n                    <div class=\"field\">\n                      <label class=\"label\">Author</label>\n                      <div class=\"control\">\n                        <input\n                          class=\"input\"\n                          type=\"text\"\n                          value={user && user.name}\n                          disabled\n                        />\n                      </div>\n                    </div>\n                    <div class=\"field\">\n                      <label class=\"label\">Title</label>\n                      <div class=\"control\">\n                        <input\n                          class=\"input\"\n                          type=\"text\"\n                          placeholder=\"Looking for scraping jobs\"\n                          value={postTitle}\n                          onChange={e => setPostTitle(e.target.value)}\n                        />\n                      </div>\n                    </div>\n\n                    <div class=\"field\">\n                      <label class=\"label\">Content</label>\n                      <div class=\"control\">\n                        <textarea\n                          class=\"textarea\"\n                          placeholder=\"Description of service\"\n                          value={postContent}\n                          onChange={e =>\n                            setPostContent(e.target.value)\n                          }></textarea>\n                      </div>\n                    </div>\n\n                    <div class=\"field is-grouped\">\n                      <div class=\"control\" onClick={createPost}>\n                        <button class=\"button is-link\">Submit</button>\n                      </div>\n                      <div class=\"control\">\n                        <Link class=\"button is-link is-light\" to=\"/\">\n                          Cancel\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </ProtectedRoute>\n        <Route path=\"/dashboard\">\n          <section className=\"section\">\n            <div className=\"container\">\n              <div class=\"row\">\n                <div class=\"columns\">\n                  <div class=\"column\">\n                    {userPosts.map((i, index) => (\n                      <div class=\"card\" style={{ margin: \"2em 0\" }}>\n                        <div class=\"card-content\">\n                          <div class=\"media\">\n                            <div class=\"media-content\">\n                              <p class=\"title is-4\">\n                                <a href=\"#\">{i.title}</a>\n                              </p>\n                              <p class=\"subtitle is-6\">{i.belong_to}</p>\n                            </div>\n                          </div>\n\n                          <div\n                            class=\"content\"\n                            dangerouslySetInnerHTML={{\n                              __html: i.content,\n                            }}></div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Route>\n        <Route path=\"/\">\n          <section className=\"section\">\n            <div className=\"container\">\n              <div class=\"row\">\n                <div class=\"columns\">\n                  <div class=\"column\">\n                    {allPosts.map((i, index) => (\n                      <div class=\"card\" style={{ margin: \"2em 0\" }}>\n                        <div class=\"card-content\">\n                          <div class=\"media\">\n                            <div class=\"media-content\">\n                              <p class=\"title is-4\">\n                                <a href=\"#\">{i.title}</a>\n                              </p>\n                              <p class=\"subtitle is-6\">{i.belong_to}</p>\n                            </div>\n                          </div>\n\n                          <div\n                            class=\"content\"\n                            dangerouslySetInnerHTML={{\n                              __html: i.content,\n                            }}></div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </Route>\n      </Switch>\n\n      <Switch>\n        <Route path=\"/login\">\n          <Login onSuccess={handleUser} />\n        </Route>\n        <Route path=\"/register\">\n          <Register onSuccess={handleUser} />\n        </Route>\n      </Switch>\n      <ToastContainer />\n    </div>\n  );\n}\n\nfunction ProtectedItem(props) {\n  if (!props.isAuthenticated) return null;\n\n  return props.children;\n}\n\nfunction ProtectedRoute(props) {\n  if (!props.isAuthenticated) return <Redirect to=\"/login\" />;\n\n  return <Route path={props.path}>{props.children}</Route>;\n}\n\nexport default Index;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter as Router } from \"react-router-dom\";\nimport App from \"./home\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.Fragment>\n    <Router>\n      <App />\n    </Router>\n  </React.Fragment>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}